# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2011, Linaro Limited
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the Linaro nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# Top level Makefile for cortex-strings




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/cortex-strings
pkgincludedir = $(includedir)/cortex-strings
pkglibdir = $(libdir)/cortex-strings
pkglibexecdir = $(libexecdir)/cortex-strings
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
check_PROGRAMS = tests/test-memchr$(EXEEXT) tests/test-memcmp$(EXEEXT) \
	tests/test-memcpy$(EXEEXT) tests/test-memmove$(EXEEXT) \
	tests/test-memset$(EXEEXT) tests/test-strchr$(EXEEXT) \
	tests/test-strcmp$(EXEEXT) tests/test-strcpy$(EXEEXT) \
	tests/test-strlen$(EXEEXT) tests/test-strncmp$(EXEEXT) \
	tests/test-strnlen$(EXEEXT)
noinst_PROGRAMS = dhry$(EXEEXT) dhry-native$(EXEEXT) try-none$(EXEEXT) \
	try-this$(EXEEXT) try-plain$(EXEEXT) try-newlib-c$(EXEEXT) \
	try-bionic-c$(EXEEXT) try-glibc-c$(EXEEXT) $(am__EXEEXT_1)

# Benchmarks and example programs
#am__append_1 = \
#	try-bionic-a9 \
#	try-bionic-a15 \
#	try-bionic-krait \
#	try-csl \
#	try-glibc \
#	try-newlib \
#	try-newlib-xscale


# Libraries used in the benchmarks and examples
#am__append_2 = \
#	libbionic-a9.a \
#	libbionic-a15.a \
#	libbionic-krait.a \
#	libcsl.a \
#	libglibc.a \
#	libnewlib.a \
#	libnewlib-xscale.a

#am__append_3 = \
#	-mtune=$(submachine)

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libbionic_a15_a_AR = $(AR) $(ARFLAGS)
libbionic_a15_a_LIBADD =
am__libbionic_a15_a_SOURCES_DIST = reference/bionic-a15/memcpy.S \
	reference/bionic-a15/memset.S reference/bionic-a15/memcmp.S \
	reference/bionic-a15/strcmp.S reference/bionic-a15/strcpy.S \
	reference/bionic-a15/strlen.c
am__dirstamp = $(am__leading_dot)dirstamp
#am__objects_1 = reference/bionic-a15/memcpy.$(OBJEXT) \
#	reference/bionic-a15/memset.$(OBJEXT)
#am_libbionic_a15_a_OBJECTS = $(am__objects_1) \
#	reference/bionic-a15/memcmp.$(OBJEXT) \
#	reference/bionic-a15/strcmp.$(OBJEXT) \
#	reference/bionic-a15/strcpy.$(OBJEXT) \
#	reference/bionic-a15/libbionic_a15_a-strlen.$(OBJEXT)
libbionic_a15_a_OBJECTS = $(am_libbionic_a15_a_OBJECTS)
libbionic_a9_a_AR = $(AR) $(ARFLAGS)
libbionic_a9_a_LIBADD =
am__libbionic_a9_a_SOURCES_DIST = reference/bionic-a9/memcpy.S \
	reference/bionic-a9/memset.S reference/bionic-a9/memcmp.S \
	reference/bionic-a9/strcmp.S reference/bionic-a9/strcpy.S \
	reference/bionic-a9/strlen.c
#am__objects_2 = reference/bionic-a9/memcpy.$(OBJEXT) \
#	reference/bionic-a9/memset.$(OBJEXT)
#am_libbionic_a9_a_OBJECTS = $(am__objects_2) \
#	reference/bionic-a9/memcmp.$(OBJEXT) \
#	reference/bionic-a9/strcmp.$(OBJEXT) \
#	reference/bionic-a9/strcpy.$(OBJEXT) \
#	reference/bionic-a9/libbionic_a9_a-strlen.$(OBJEXT)
libbionic_a9_a_OBJECTS = $(am_libbionic_a9_a_OBJECTS)
libbionic_c_a_AR = $(AR) $(ARFLAGS)
libbionic_c_a_LIBADD =
am_libbionic_c_a_OBJECTS = reference/bionic-c/bcopy.$(OBJEXT) \
	reference/bionic-c/memchr.$(OBJEXT) \
	reference/bionic-c/memcmp.$(OBJEXT) \
	reference/bionic-c/memcpy.$(OBJEXT) \
	reference/bionic-c/memset.$(OBJEXT) \
	reference/bionic-c/strchr.$(OBJEXT) \
	reference/bionic-c/strcmp.$(OBJEXT) \
	reference/bionic-c/strcpy.$(OBJEXT) \
	reference/bionic-c/strlen.$(OBJEXT)
libbionic_c_a_OBJECTS = $(am_libbionic_c_a_OBJECTS)
libbionic_krait_a_AR = $(AR) $(ARFLAGS)
libbionic_krait_a_LIBADD =
am__libbionic_krait_a_SOURCES_DIST =  \
	reference/bionic-krait/memcpy_base.S \
	reference/bionic-krait/memcpy.S \
	reference/bionic-krait/memset.S reference/bionic-a15/memcmp.S \
	reference/bionic-krait/strcmp.S reference/bionic-a15/strcpy.S \
	reference/bionic-a15/strlen.S
#am__objects_3 = reference/bionic-krait/memcpy_base.$(OBJEXT) \
#	reference/bionic-krait/memcpy.$(OBJEXT) \
#	reference/bionic-krait/memset.$(OBJEXT)
#am_libbionic_krait_a_OBJECTS = $(am__objects_3) \
#	reference/bionic-a15/memcmp.$(OBJEXT) \
#	reference/bionic-krait/strcmp.$(OBJEXT) \
#	reference/bionic-a15/strcpy.$(OBJEXT) \
#	reference/bionic-a15/strlen.$(OBJEXT)
libbionic_krait_a_OBJECTS = $(am_libbionic_krait_a_OBJECTS)
libcsl_a_AR = $(AR) $(ARFLAGS)
libcsl_a_LIBADD =
am__libcsl_a_SOURCES_DIST = reference/csl/memcpy.c \
	reference/csl/memset.c reference/csl/arm_asm.h
#am_libcsl_a_OBJECTS =  \
#	reference/csl/memcpy.$(OBJEXT) \
#	reference/csl/memset.$(OBJEXT)
libcsl_a_OBJECTS = $(am_libcsl_a_OBJECTS)
libglibc_c_a_AR = $(AR) $(ARFLAGS)
libglibc_c_a_LIBADD =
am_libglibc_c_a_OBJECTS = reference/glibc-c/memchr.$(OBJEXT) \
	reference/glibc-c/memcmp.$(OBJEXT) \
	reference/glibc-c/memcpy.$(OBJEXT) \
	reference/glibc-c/memset.$(OBJEXT) \
	reference/glibc-c/strchr.$(OBJEXT) \
	reference/glibc-c/strcmp.$(OBJEXT) \
	reference/glibc-c/strcpy.$(OBJEXT) \
	reference/glibc-c/strlen.$(OBJEXT) \
	reference/glibc-c/wordcopy.$(OBJEXT)
libglibc_c_a_OBJECTS = $(am_libglibc_c_a_OBJECTS)
libglibc_a_AR = $(AR) $(ARFLAGS)
libglibc_a_LIBADD =
am__libglibc_a_SOURCES_DIST = reference/glibc/memcpy.S \
	reference/glibc/memset.S reference/glibc/strchr.S \
	reference/glibc/strlen.S
#am_libglibc_a_OBJECTS =  \
#	reference/glibc/memcpy.$(OBJEXT) \
#	reference/glibc/memset.$(OBJEXT) \
#	reference/glibc/strchr.$(OBJEXT) \
#	reference/glibc/strlen.$(OBJEXT)
libglibc_a_OBJECTS = $(am_libglibc_a_OBJECTS)
libmulti_a_AR = $(AR) $(ARFLAGS)
libmulti_a_LIBADD =
am_libmulti_a_OBJECTS = benchmarks/multi/libmulti_a-harness.$(OBJEXT)
libmulti_a_OBJECTS = $(am_libmulti_a_OBJECTS)
libnewlib_c_a_AR = $(AR) $(ARFLAGS)
libnewlib_c_a_LIBADD =
am_libnewlib_c_a_OBJECTS = reference/newlib-c/memchr.$(OBJEXT) \
	reference/newlib-c/memcmp.$(OBJEXT) \
	reference/newlib-c/memcpy.$(OBJEXT) \
	reference/newlib-c/memset.$(OBJEXT) \
	reference/newlib-c/strchr.$(OBJEXT) \
	reference/newlib-c/strcmp.$(OBJEXT) \
	reference/newlib-c/strcpy.$(OBJEXT) \
	reference/newlib-c/strlen.$(OBJEXT)
libnewlib_c_a_OBJECTS = $(am_libnewlib_c_a_OBJECTS)
libnewlib_xscale_a_AR = $(AR) $(ARFLAGS)
libnewlib_xscale_a_LIBADD =
am__libnewlib_xscale_a_SOURCES_DIST =  \
	reference/newlib-xscale/memchr.c \
	reference/newlib-xscale/memcpy.c \
	reference/newlib-xscale/memset.c \
	reference/newlib-xscale/strchr.c \
	reference/newlib-xscale/strcmp.c \
	reference/newlib-xscale/strcpy.c \
	reference/newlib-xscale/strlen.c \
	reference/newlib-xscale/xscale.h
#am_libnewlib_xscale_a_OBJECTS =  \
#	reference/newlib-xscale/memchr.$(OBJEXT) \
#	reference/newlib-xscale/memcpy.$(OBJEXT) \
#	reference/newlib-xscale/memset.$(OBJEXT) \
#	reference/newlib-xscale/strchr.$(OBJEXT) \
#	reference/newlib-xscale/strcmp.$(OBJEXT) \
#	reference/newlib-xscale/strcpy.$(OBJEXT) \
#	reference/newlib-xscale/strlen.$(OBJEXT)
libnewlib_xscale_a_OBJECTS = $(am_libnewlib_xscale_a_OBJECTS)
libnewlib_a_AR = $(AR) $(ARFLAGS)
libnewlib_a_LIBADD =
am__libnewlib_a_SOURCES_DIST = reference/newlib/memcpy.S \
	reference/newlib/strcmp.S reference/newlib/strcpy.c \
	reference/newlib/strlen.c reference/newlib/arm_asm.h \
	reference/newlib/shim.h
#am_libnewlib_a_OBJECTS =  \
#	reference/newlib/memcpy.$(OBJEXT) \
#	reference/newlib/strcmp.$(OBJEXT) \
#	reference/newlib/strcpy.$(OBJEXT) \
#	reference/newlib/strlen.$(OBJEXT)
libnewlib_a_OBJECTS = $(am_libnewlib_a_OBJECTS)
libplain_a_AR = $(AR) $(ARFLAGS)
libplain_a_LIBADD =
am_libplain_a_OBJECTS = reference/plain/memset.$(OBJEXT) \
	reference/plain/memcpy.$(OBJEXT) \
	reference/plain/strcmp.$(OBJEXT) \
	reference/plain/strcpy.$(OBJEXT)
libplain_a_OBJECTS = $(am_libplain_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcortex_strings_la_LIBADD =
am__libcortex_strings_la_SOURCES_DIST = src/thumb-2/strcpy.c \
	src/arm/memchr.S src/arm/strchr.S src/thumb-2/strlen.S \
	src/arm/memset.S src/arm/memcpy.S src/arm/strcmp.S \
	src/aarch64/memchr.S src/aarch64/memcmp.S src/aarch64/memcpy.S \
	src/aarch64/memmove.S src/aarch64/memset.S \
	src/aarch64/strchr.S src/aarch64/strchrnul.S \
	src/aarch64/strcmp.S src/aarch64/strcpy.S src/aarch64/strlen.S \
	src/aarch64/strncmp.S src/aarch64/strnlen.S
#am_libcortex_strings_la_OBJECTS =  \
#	src/aarch64/memchr.lo \
#	src/aarch64/memcmp.lo \
#	src/aarch64/memcpy.lo \
#	src/aarch64/memmove.lo \
#	src/aarch64/memset.lo \
#	src/aarch64/strchr.lo \
#	src/aarch64/strchrnul.lo \
#	src/aarch64/strcmp.lo \
#	src/aarch64/strcpy.lo \
#	src/aarch64/strlen.lo \
#	src/aarch64/strncmp.lo \
#	src/aarch64/strnlen.lo
#am_libcortex_strings_la_OBJECTS =  \
#	src/thumb-2/strcpy.lo src/arm/memchr.lo \
#	src/arm/strchr.lo src/thumb-2/strlen.lo \
#	src/arm/memset.lo src/arm/memcpy.lo \
#	src/arm/strcmp.lo
libcortex_strings_la_OBJECTS = $(am_libcortex_strings_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libcortex_strings_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libcortex_strings_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am__EXEEXT_1 = try-bionic-a9$(EXEEXT) \
#	try-bionic-a15$(EXEEXT) \
#	try-bionic-krait$(EXEEXT) try-csl$(EXEEXT) \
#	try-glibc$(EXEEXT) try-newlib$(EXEEXT) \
#	try-newlib-xscale$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_dhry_OBJECTS = benchmarks/dhry/dhry-dhry_1.$(OBJEXT) \
	benchmarks/dhry/dhry-dhry_2.$(OBJEXT)
dhry_OBJECTS = $(am_dhry_OBJECTS)
dhry_DEPENDENCIES = libcortex-strings.la
dhry_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dhry_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_4 = benchmarks/dhry/dhry_native-dhry_1.$(OBJEXT) \
	benchmarks/dhry/dhry_native-dhry_2.$(OBJEXT)
am_dhry_native_OBJECTS = $(am__objects_4)
dhry_native_OBJECTS = $(am_dhry_native_OBJECTS)
dhry_native_LDADD = $(LDADD)
dhry_native_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(dhry_native_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
tests_test_memchr_SOURCES = tests/test-memchr.c
tests_test_memchr_OBJECTS =  \
	tests/tests_test_memchr-test-memchr.$(OBJEXT)
tests_test_memchr_DEPENDENCIES = $(tests_ldadd)
tests_test_memchr_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_memchr_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_memcmp_SOURCES = tests/test-memcmp.c
tests_test_memcmp_OBJECTS =  \
	tests/tests_test_memcmp-test-memcmp.$(OBJEXT)
tests_test_memcmp_DEPENDENCIES = $(tests_ldadd)
tests_test_memcmp_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_memcmp_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_memcpy_SOURCES = tests/test-memcpy.c
tests_test_memcpy_OBJECTS =  \
	tests/tests_test_memcpy-test-memcpy.$(OBJEXT)
tests_test_memcpy_DEPENDENCIES = $(tests_ldadd)
tests_test_memcpy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_memcpy_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_memmove_SOURCES = tests/test-memmove.c
tests_test_memmove_OBJECTS =  \
	tests/tests_test_memmove-test-memmove.$(OBJEXT)
tests_test_memmove_DEPENDENCIES = $(tests_ldadd)
tests_test_memmove_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_memmove_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
tests_test_memset_SOURCES = tests/test-memset.c
tests_test_memset_OBJECTS =  \
	tests/tests_test_memset-test-memset.$(OBJEXT)
tests_test_memset_DEPENDENCIES = $(tests_ldadd)
tests_test_memset_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_memset_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_strchr_SOURCES = tests/test-strchr.c
tests_test_strchr_OBJECTS =  \
	tests/tests_test_strchr-test-strchr.$(OBJEXT)
tests_test_strchr_DEPENDENCIES = $(tests_ldadd)
tests_test_strchr_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_strchr_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_strcmp_SOURCES = tests/test-strcmp.c
tests_test_strcmp_OBJECTS =  \
	tests/tests_test_strcmp-test-strcmp.$(OBJEXT)
tests_test_strcmp_DEPENDENCIES = $(tests_ldadd)
tests_test_strcmp_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_strcmp_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_strcpy_SOURCES = tests/test-strcpy.c
tests_test_strcpy_OBJECTS =  \
	tests/tests_test_strcpy-test-strcpy.$(OBJEXT)
tests_test_strcpy_DEPENDENCIES = $(tests_ldadd)
tests_test_strcpy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_strcpy_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_strlen_SOURCES = tests/test-strlen.c
tests_test_strlen_OBJECTS =  \
	tests/tests_test_strlen-test-strlen.$(OBJEXT)
tests_test_strlen_DEPENDENCIES = $(tests_ldadd)
tests_test_strlen_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_strlen_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
tests_test_strncmp_SOURCES = tests/test-strncmp.c
tests_test_strncmp_OBJECTS =  \
	tests/tests_test_strncmp-test-strncmp.$(OBJEXT)
tests_test_strncmp_DEPENDENCIES = $(tests_ldadd)
tests_test_strncmp_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(tests_test_strncmp_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
tests_test_strnlen_SOURCES = tests/test-strnlen.c
tests_test_strnlen_OBJECTS = tests/test-strnlen.$(OBJEXT)
tests_test_strnlen_LDADD = $(LDADD)
am_try_bionic_a15_OBJECTS =
try_bionic_a15_OBJECTS = $(am_try_bionic_a15_OBJECTS)
#try_bionic_a15_DEPENDENCIES = libmulti.a \
#	libbionic-a15.a
am_try_bionic_a9_OBJECTS =
try_bionic_a9_OBJECTS = $(am_try_bionic_a9_OBJECTS)
#try_bionic_a9_DEPENDENCIES = libmulti.a \
#	libbionic-a9.a
am_try_bionic_c_OBJECTS =
try_bionic_c_OBJECTS = $(am_try_bionic_c_OBJECTS)
try_bionic_c_DEPENDENCIES = libmulti.a libbionic-c.a
am_try_bionic_krait_OBJECTS =
try_bionic_krait_OBJECTS = $(am_try_bionic_krait_OBJECTS)
#try_bionic_krait_DEPENDENCIES = libmulti.a \
#	libbionic-krait.a
am_try_csl_OBJECTS =
try_csl_OBJECTS = $(am_try_csl_OBJECTS)
#try_csl_DEPENDENCIES = libmulti.a libcsl.a
am_try_glibc_OBJECTS =
try_glibc_OBJECTS = $(am_try_glibc_OBJECTS)
#try_glibc_DEPENDENCIES = libmulti.a libglibc.a
am_try_glibc_c_OBJECTS =
try_glibc_c_OBJECTS = $(am_try_glibc_c_OBJECTS)
try_glibc_c_DEPENDENCIES = libmulti.a libglibc-c.a
am_try_newlib_OBJECTS =
try_newlib_OBJECTS = $(am_try_newlib_OBJECTS)
#try_newlib_DEPENDENCIES = libmulti.a libnewlib.a
am_try_newlib_c_OBJECTS =
try_newlib_c_OBJECTS = $(am_try_newlib_c_OBJECTS)
try_newlib_c_DEPENDENCIES = libmulti.a libnewlib-c.a
am_try_newlib_xscale_OBJECTS =
try_newlib_xscale_OBJECTS = $(am_try_newlib_xscale_OBJECTS)
#try_newlib_xscale_DEPENDENCIES = libmulti.a \
#	libnewlib-xscale.a
am_try_none_OBJECTS =
try_none_OBJECTS = $(am_try_none_OBJECTS)
try_none_DEPENDENCIES = libmulti.a
am_try_plain_OBJECTS =
try_plain_OBJECTS = $(am_try_plain_OBJECTS)
try_plain_DEPENDENCIES = libmulti.a libplain.a
am_try_this_OBJECTS =
try_this_OBJECTS = $(am_try_this_OBJECTS)
try_this_DEPENDENCIES = libmulti.a libcortex-strings.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CCASFLAGS) $(CCASFLAGS)
AM_V_CPPAS = $(am__v_CPPAS_$(V))
am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))
am__v_CPPAS_0 = @echo "  CPPAS   " $@;
am__v_CPPAS_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libbionic_a15_a_SOURCES) $(libbionic_a9_a_SOURCES) \
	$(libbionic_c_a_SOURCES) $(libbionic_krait_a_SOURCES) \
	$(libcsl_a_SOURCES) $(libglibc_c_a_SOURCES) \
	$(libglibc_a_SOURCES) $(libmulti_a_SOURCES) \
	$(libnewlib_c_a_SOURCES) $(libnewlib_xscale_a_SOURCES) \
	$(libnewlib_a_SOURCES) $(libplain_a_SOURCES) \
	$(libcortex_strings_la_SOURCES) $(dhry_SOURCES) \
	$(dhry_native_SOURCES) tests/test-memchr.c tests/test-memcmp.c \
	tests/test-memcpy.c tests/test-memmove.c tests/test-memset.c \
	tests/test-strchr.c tests/test-strcmp.c tests/test-strcpy.c \
	tests/test-strlen.c tests/test-strncmp.c tests/test-strnlen.c \
	$(try_bionic_a15_SOURCES) $(try_bionic_a9_SOURCES) \
	$(try_bionic_c_SOURCES) $(try_bionic_krait_SOURCES) \
	$(try_csl_SOURCES) $(try_glibc_SOURCES) $(try_glibc_c_SOURCES) \
	$(try_newlib_SOURCES) $(try_newlib_c_SOURCES) \
	$(try_newlib_xscale_SOURCES) $(try_none_SOURCES) \
	$(try_plain_SOURCES) $(try_this_SOURCES)
DIST_SOURCES = $(am__libbionic_a15_a_SOURCES_DIST) \
	$(am__libbionic_a9_a_SOURCES_DIST) $(libbionic_c_a_SOURCES) \
	$(am__libbionic_krait_a_SOURCES_DIST) \
	$(am__libcsl_a_SOURCES_DIST) $(libglibc_c_a_SOURCES) \
	$(am__libglibc_a_SOURCES_DIST) $(libmulti_a_SOURCES) \
	$(libnewlib_c_a_SOURCES) \
	$(am__libnewlib_xscale_a_SOURCES_DIST) \
	$(am__libnewlib_a_SOURCES_DIST) $(libplain_a_SOURCES) \
	$(am__libcortex_strings_la_SOURCES_DIST) $(dhry_SOURCES) \
	$(dhry_native_SOURCES) tests/test-memchr.c tests/test-memcmp.c \
	tests/test-memcpy.c tests/test-memmove.c tests/test-memset.c \
	tests/test-strchr.c tests/test-strcmp.c tests/test-strcpy.c \
	tests/test-strlen.c tests/test-strncmp.c tests/test-strnlen.c \
	$(try_bionic_a15_SOURCES) $(try_bionic_a9_SOURCES) \
	$(try_bionic_c_SOURCES) $(try_bionic_krait_SOURCES) \
	$(try_csl_SOURCES) $(try_glibc_SOURCES) $(try_glibc_c_SOURCES) \
	$(try_newlib_SOURCES) $(try_newlib_c_SOURCES) \
	$(try_newlib_xscale_SOURCES) $(try_none_SOURCES) \
	$(try_plain_SOURCES) $(try_this_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in README \
	compile config.guess config.sub depcomp install-sh ltmain.sh \
	missing test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2
GZIP_ENV = --best
DIST_TARGETS = dist-bzip2 dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/frap129/software/cortex-strings/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/frap129/software/cortex-strings/missing autoconf
AUTOHEADER = ${SHELL} /home/frap129/software/cortex-strings/missing autoheader
AUTOMAKE = ${SHELL} /home/frap129/software/cortex-strings/missing automake-1.15
AWK = gawk
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/frap129/software/cortex-strings/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cortex-strings
PACKAGE_BUGREPORT = 
PACKAGE_NAME = cortex-strings
PACKAGE_STRING = cortex-strings 1.2-2016.04~dev
PACKAGE_TARNAME = cortex-strings
PACKAGE_URL = 
PACKAGE_VERSION = 1.2-2016.04~dev
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.2-2016.04~dev
abs_builddir = /home/frap129/software/cortex-strings
abs_srcdir = /home/frap129/software/cortex-strings
abs_top_builddir = /home/frap129/software/cortex-strings
abs_top_srcdir = /home/frap129/software/cortex-strings
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/frap129/software/cortex-strings/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/frap129/software/cortex-strings/out
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
submachine = 
sysconfdir = ${prefix}/etc
target_alias = arm-linux-androideabi
top_build_prefix = 
top_builddir = .
top_srcdir = .
with_neon = yes
with_vfp = yes

# Used to record the compiler version in the executables
COMPILER = $(shell $(CC) --version 2>&1 | head -n1)

# The main library
lib_LTLIBRARIES = \
	libcortex-strings.la


# Options for the tests
tests_cflags = -I$(srcdir)/tests $(AM_CFLAGS)
tests_ldadd = libcortex-strings.la
tests_test_memchr_LDADD = $(tests_ldadd)
tests_test_memchr_CFLAGS = $(tests_cflags)
tests_test_memcmp_LDADD = $(tests_ldadd)
tests_test_memcmp_CFLAGS = $(tests_cflags)
tests_test_memcpy_LDADD = $(tests_ldadd)
tests_test_memcpy_CFLAGS = $(tests_cflags)
tests_test_memmove_LDADD = $(tests_ldadd)
tests_test_memmove_CFLAGS = $(tests_cflags)
tests_test_memset_LDADD = $(tests_ldadd)
tests_test_memset_CFLAGS = $(tests_cflags)
tests_test_strchr_LDADD = $(tests_ldadd)
tests_test_strchr_CFLAGS = $(tests_cflags)
tests_test_strcmp_LDADD = $(tests_ldadd)
tests_test_strcmp_CFLAGS = $(tests_cflags)
tests_test_strcpy_LDADD = $(tests_ldadd)
tests_test_strcpy_CFLAGS = $(tests_cflags)
tests_test_strlen_LDADD = $(tests_ldadd)
tests_test_strlen_CFLAGS = $(tests_cflags)
tests_test_strncmp_LDADD = $(tests_ldadd)
tests_test_strncmp_CFLAGS = $(tests_cflags)
TESTS = $(check_PROGRAMS)

# Good 'ol Dhrystone
dhry_SOURCES = \
	benchmarks/dhry/dhry_1.c \
	benchmarks/dhry/dhry_2.c \
	benchmarks/dhry/dhry.h

dhry_CFLAGS = -Dcompiler="\"$(COMPILER)\"" -Doptions="\"$(CFLAGS)\""
dhry_LDADD = libcortex-strings.la
dhry_native_SOURCES = $(dhry_SOURCES)
dhry_native_CFLAGS = $(dhry_CFLAGS)

# Benchmark harness
noinst_LIBRARIES = libmulti.a libbionic-c.a libglibc-c.a libnewlib-c.a \
	libplain.a $(am__append_2)
libmulti_a_SOURCES = \
	benchmarks/multi/harness.c

libmulti_a_CFLAGS = -DVERSION=\"$(VERSION)\" $(AM_CFLAGS)
libbionic_c_a_SOURCES = \
	reference/bionic-c/bcopy.c \
	reference/bionic-c/memchr.c \
	reference/bionic-c/memcmp.c \
	reference/bionic-c/memcpy.c \
	reference/bionic-c/memset.c \
	reference/bionic-c/strchr.c \
	reference/bionic-c/strcmp.c \
	reference/bionic-c/strcpy.c \
	reference/bionic-c/strlen.c

libglibc_c_a_SOURCES = \
	reference/glibc-c/memchr.c \
	reference/glibc-c/memcmp.c \
	reference/glibc-c/memcpy.c \
	reference/glibc-c/memset.c \
	reference/glibc-c/strchr.c \
	reference/glibc-c/strcmp.c \
	reference/glibc-c/strcpy.c \
	reference/glibc-c/strlen.c \
	reference/glibc-c/wordcopy.c \
	reference/glibc-c/memcopy.h \
	reference/glibc-c/pagecopy.h

libnewlib_c_a_SOURCES = \
	reference/newlib-c/memchr.c \
	reference/newlib-c/memcmp.c \
	reference/newlib-c/memcpy.c \
	reference/newlib-c/memset.c \
	reference/newlib-c/strchr.c \
	reference/newlib-c/strcmp.c \
	reference/newlib-c/strcpy.c \
	reference/newlib-c/strlen.c \
	reference/newlib-c/shim.h

libplain_a_SOURCES = \
	reference/plain/memset.c \
	reference/plain/memcpy.c \
	reference/plain/strcmp.c \
	reference/plain/strcpy.c

try_none_SOURCES = 
try_none_LDADD = libmulti.a -lrt
try_this_SOURCES = 
try_this_LDADD = libmulti.a libcortex-strings.la -lrt
try_bionic_c_SOURCES = 
try_bionic_c_LDADD = libmulti.a libbionic-c.a -lrt
try_glibc_c_SOURCES = 
try_glibc_c_LDADD = libmulti.a libglibc-c.a -lrt
try_newlib_c_SOURCES = 
try_newlib_c_LDADD = libmulti.a libnewlib-c.a -lrt
try_plain_SOURCES = 
try_plain_LDADD = libmulti.a libplain.a -lrt

# Architecture specific

# Pull in the NEON specific files
#neon_bionic_a9_sources = \
#	reference/bionic-a9/memcpy.S \
#	reference/bionic-a9/memset.S

#neon_bionic_a15_sources = \
#	reference/bionic-a15/memcpy.S \
#	reference/bionic-a15/memset.S

#neon_bionic_krait_sources = \
#	reference/bionic-krait/memcpy_base.S \
#	reference/bionic-krait/memcpy.S \
#	reference/bionic-krait/memset.S

###fpu_flags = -msoft-float
##fpu_flags = -mfpu=vfpv4
#fpu_flags = 

# Main library
#libcortex_strings_la_SOURCES = \
#	src/thumb-2/strcpy.c \
#	src/arm/memchr.S \
#	src/arm/strchr.S \
#	src/thumb-2/strlen.S \
#	src/arm/memset.S \
#	src/arm/memcpy.S \
#	src/arm/strcmp.S


# aarch64 specific
#libcortex_strings_la_SOURCES = \
#	src/aarch64/memchr.S \
#	src/aarch64/memcmp.S \
#	src/aarch64/memcpy.S \
#	src/aarch64/memmove.S \
#	src/aarch64/memset.S \
#	src/aarch64/strchr.S \
#	src/aarch64/strchrnul.S \
#	src/aarch64/strcmp.S \
#	src/aarch64/strcpy.S \
#	src/aarch64/strlen.S \
#	src/aarch64/strncmp.S \
#	src/aarch64/strnlen.S


# Libraries containing the difference reference versions
#libbionic_a9_a_SOURCES = \
#	$(neon_bionic_a9_sources) \
#	reference/bionic-a9/memcmp.S \
#	reference/bionic-a9/strcmp.S \
#	reference/bionic-a9/strcpy.S \
#	reference/bionic-a9/strlen.c

#libbionic_a9_a_CFLAGS = -Wa,-mimplicit-it=thumb
#libbionic_a15_a_SOURCES = \
#	$(neon_bionic_a15_sources) \
#	reference/bionic-a15/memcmp.S \
#	reference/bionic-a15/strcmp.S \
#	reference/bionic-a15/strcpy.S \
#	reference/bionic-a15/strlen.c

#libbionic_a15_a_CFLAGS = -Wa,-mimplicit-it=thumb
#libbionic_krait_a_SOURCES = \
#	$(neon_bionic_krait_sources) \
#	reference/bionic-a15/memcmp.S \
#	reference/bionic-krait/strcmp.S \
#	reference/bionic-a15/strcpy.S \
#	reference/bionic-a15/strlen.S

#libbionic_krait_a_CFLAGS = -Wa,-mimplicit-it=thumb
#libcsl_a_SOURCES = \
#	reference/csl/memcpy.c \
#	reference/csl/memset.c \
#	reference/csl/arm_asm.h

#libglibc_a_SOURCES = \
#	reference/glibc/memcpy.S \
#	reference/glibc/memset.S \
#	reference/glibc/strchr.S \
#	reference/glibc/strlen.S

#libnewlib_a_SOURCES = \
#	reference/newlib/memcpy.S \
#	reference/newlib/strcmp.S \
#	reference/newlib/strcpy.c \
#	reference/newlib/strlen.c \
#	reference/newlib/arm_asm.h \
#	reference/newlib/shim.h

#libnewlib_xscale_a_SOURCES = \
#	reference/newlib-xscale/memchr.c \
#	reference/newlib-xscale/memcpy.c \
#	reference/newlib-xscale/memset.c \
#	reference/newlib-xscale/strchr.c \
#	reference/newlib-xscale/strcmp.c \
#	reference/newlib-xscale/strcpy.c \
#	reference/newlib-xscale/strlen.c \
#	reference/newlib-xscale/xscale.h


# Flags for the benchmark helpers
#try_bionic_a9_SOURCES = 
#try_bionic_a9_LDADD = libmulti.a libbionic-a9.a -lrt
#try_bionic_a15_SOURCES = 
#try_bionic_a15_LDADD = libmulti.a libbionic-a15.a -lrt
#try_bionic_krait_SOURCES = 
#try_bionic_krait_LDADD = libmulti.a libbionic-krait.a -lrt
#try_csl_SOURCES = 
#try_csl_LDADD = libmulti.a libcsl.a -lrt
#try_glibc_SOURCES = 
#try_glibc_LDADD = libmulti.a libglibc.a -lrt
#try_newlib_SOURCES = 
#try_newlib_LDADD = libmulti.a libnewlib.a -lrt
#try_newlib_xscale_SOURCES = 
#try_newlib_xscale_LDADD = libmulti.a libnewlib-xscale.a -lrt
#AM_CPPFLAGS = $(fpu_flags)
#AM_LDFLAGS = $(fpu_flags)
libcortex_strings_la_LDFLAGS = -version-info 1:0:0
AM_CFLAGS = -std=gnu99 -fno-builtin -fno-stack-protector \
	-U_FORTIFY_SOURCE $(AM_CPPFLAGS) $(am__append_3)
EXTRA_DIST = \
	tests/hp-timing.h \
	tests/test-string.h \
	tests/test-skeleton.c \
	scripts/add-license.sh \
	scripts/bench.py \
	scripts/fixup.py \
	scripts/libplot.py \
	scripts/plot-align.py \
	scripts/plot.py \
	scripts/plot-sizes.py \
	scripts/plot-top.py \
	scripts/trim.sh \
	autogen.sh

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .S .c .lo .log .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
reference/bionic-a15/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-a15
	@: > reference/bionic-a15/$(am__dirstamp)
reference/bionic-a15/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-a15/$(DEPDIR)
	@: > reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/memcpy.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/memset.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/memcmp.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/strcmp.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/strcpy.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/libbionic_a15_a-strlen.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)

libbionic-a15.a: $(libbionic_a15_a_OBJECTS) $(libbionic_a15_a_DEPENDENCIES) $(EXTRA_libbionic_a15_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbionic-a15.a
	$(AM_V_AR)$(libbionic_a15_a_AR) libbionic-a15.a $(libbionic_a15_a_OBJECTS) $(libbionic_a15_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbionic-a15.a
reference/bionic-a9/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-a9
	@: > reference/bionic-a9/$(am__dirstamp)
reference/bionic-a9/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-a9/$(DEPDIR)
	@: > reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a9/memcpy.$(OBJEXT):  \
	reference/bionic-a9/$(am__dirstamp) \
	reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a9/memset.$(OBJEXT):  \
	reference/bionic-a9/$(am__dirstamp) \
	reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a9/memcmp.$(OBJEXT):  \
	reference/bionic-a9/$(am__dirstamp) \
	reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a9/strcmp.$(OBJEXT):  \
	reference/bionic-a9/$(am__dirstamp) \
	reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a9/strcpy.$(OBJEXT):  \
	reference/bionic-a9/$(am__dirstamp) \
	reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a9/libbionic_a9_a-strlen.$(OBJEXT):  \
	reference/bionic-a9/$(am__dirstamp) \
	reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)

libbionic-a9.a: $(libbionic_a9_a_OBJECTS) $(libbionic_a9_a_DEPENDENCIES) $(EXTRA_libbionic_a9_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbionic-a9.a
	$(AM_V_AR)$(libbionic_a9_a_AR) libbionic-a9.a $(libbionic_a9_a_OBJECTS) $(libbionic_a9_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbionic-a9.a
reference/bionic-c/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-c
	@: > reference/bionic-c/$(am__dirstamp)
reference/bionic-c/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-c/$(DEPDIR)
	@: > reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/bcopy.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/memchr.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/memcmp.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/memcpy.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/memset.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/strchr.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/strcmp.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/strcpy.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
reference/bionic-c/strlen.$(OBJEXT):  \
	reference/bionic-c/$(am__dirstamp) \
	reference/bionic-c/$(DEPDIR)/$(am__dirstamp)

libbionic-c.a: $(libbionic_c_a_OBJECTS) $(libbionic_c_a_DEPENDENCIES) $(EXTRA_libbionic_c_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbionic-c.a
	$(AM_V_AR)$(libbionic_c_a_AR) libbionic-c.a $(libbionic_c_a_OBJECTS) $(libbionic_c_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbionic-c.a
reference/bionic-krait/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-krait
	@: > reference/bionic-krait/$(am__dirstamp)
reference/bionic-krait/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/bionic-krait/$(DEPDIR)
	@: > reference/bionic-krait/$(DEPDIR)/$(am__dirstamp)
reference/bionic-krait/memcpy_base.$(OBJEXT):  \
	reference/bionic-krait/$(am__dirstamp) \
	reference/bionic-krait/$(DEPDIR)/$(am__dirstamp)
reference/bionic-krait/memcpy.$(OBJEXT):  \
	reference/bionic-krait/$(am__dirstamp) \
	reference/bionic-krait/$(DEPDIR)/$(am__dirstamp)
reference/bionic-krait/memset.$(OBJEXT):  \
	reference/bionic-krait/$(am__dirstamp) \
	reference/bionic-krait/$(DEPDIR)/$(am__dirstamp)
reference/bionic-krait/strcmp.$(OBJEXT):  \
	reference/bionic-krait/$(am__dirstamp) \
	reference/bionic-krait/$(DEPDIR)/$(am__dirstamp)
reference/bionic-a15/strlen.$(OBJEXT):  \
	reference/bionic-a15/$(am__dirstamp) \
	reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)

libbionic-krait.a: $(libbionic_krait_a_OBJECTS) $(libbionic_krait_a_DEPENDENCIES) $(EXTRA_libbionic_krait_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libbionic-krait.a
	$(AM_V_AR)$(libbionic_krait_a_AR) libbionic-krait.a $(libbionic_krait_a_OBJECTS) $(libbionic_krait_a_LIBADD)
	$(AM_V_at)$(RANLIB) libbionic-krait.a
reference/csl/$(am__dirstamp):
	@$(MKDIR_P) reference/csl
	@: > reference/csl/$(am__dirstamp)
reference/csl/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/csl/$(DEPDIR)
	@: > reference/csl/$(DEPDIR)/$(am__dirstamp)
reference/csl/memcpy.$(OBJEXT): reference/csl/$(am__dirstamp) \
	reference/csl/$(DEPDIR)/$(am__dirstamp)
reference/csl/memset.$(OBJEXT): reference/csl/$(am__dirstamp) \
	reference/csl/$(DEPDIR)/$(am__dirstamp)

libcsl.a: $(libcsl_a_OBJECTS) $(libcsl_a_DEPENDENCIES) $(EXTRA_libcsl_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcsl.a
	$(AM_V_AR)$(libcsl_a_AR) libcsl.a $(libcsl_a_OBJECTS) $(libcsl_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcsl.a
reference/glibc-c/$(am__dirstamp):
	@$(MKDIR_P) reference/glibc-c
	@: > reference/glibc-c/$(am__dirstamp)
reference/glibc-c/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/glibc-c/$(DEPDIR)
	@: > reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/memchr.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/memcmp.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/memcpy.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/memset.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/strchr.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/strcmp.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/strcpy.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/strlen.$(OBJEXT): reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
reference/glibc-c/wordcopy.$(OBJEXT):  \
	reference/glibc-c/$(am__dirstamp) \
	reference/glibc-c/$(DEPDIR)/$(am__dirstamp)

libglibc-c.a: $(libglibc_c_a_OBJECTS) $(libglibc_c_a_DEPENDENCIES) $(EXTRA_libglibc_c_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libglibc-c.a
	$(AM_V_AR)$(libglibc_c_a_AR) libglibc-c.a $(libglibc_c_a_OBJECTS) $(libglibc_c_a_LIBADD)
	$(AM_V_at)$(RANLIB) libglibc-c.a
reference/glibc/$(am__dirstamp):
	@$(MKDIR_P) reference/glibc
	@: > reference/glibc/$(am__dirstamp)
reference/glibc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/glibc/$(DEPDIR)
	@: > reference/glibc/$(DEPDIR)/$(am__dirstamp)
reference/glibc/memcpy.$(OBJEXT): reference/glibc/$(am__dirstamp) \
	reference/glibc/$(DEPDIR)/$(am__dirstamp)
reference/glibc/memset.$(OBJEXT): reference/glibc/$(am__dirstamp) \
	reference/glibc/$(DEPDIR)/$(am__dirstamp)
reference/glibc/strchr.$(OBJEXT): reference/glibc/$(am__dirstamp) \
	reference/glibc/$(DEPDIR)/$(am__dirstamp)
reference/glibc/strlen.$(OBJEXT): reference/glibc/$(am__dirstamp) \
	reference/glibc/$(DEPDIR)/$(am__dirstamp)

libglibc.a: $(libglibc_a_OBJECTS) $(libglibc_a_DEPENDENCIES) $(EXTRA_libglibc_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libglibc.a
	$(AM_V_AR)$(libglibc_a_AR) libglibc.a $(libglibc_a_OBJECTS) $(libglibc_a_LIBADD)
	$(AM_V_at)$(RANLIB) libglibc.a
benchmarks/multi/$(am__dirstamp):
	@$(MKDIR_P) benchmarks/multi
	@: > benchmarks/multi/$(am__dirstamp)
benchmarks/multi/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) benchmarks/multi/$(DEPDIR)
	@: > benchmarks/multi/$(DEPDIR)/$(am__dirstamp)
benchmarks/multi/libmulti_a-harness.$(OBJEXT):  \
	benchmarks/multi/$(am__dirstamp) \
	benchmarks/multi/$(DEPDIR)/$(am__dirstamp)

libmulti.a: $(libmulti_a_OBJECTS) $(libmulti_a_DEPENDENCIES) $(EXTRA_libmulti_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libmulti.a
	$(AM_V_AR)$(libmulti_a_AR) libmulti.a $(libmulti_a_OBJECTS) $(libmulti_a_LIBADD)
	$(AM_V_at)$(RANLIB) libmulti.a
reference/newlib-c/$(am__dirstamp):
	@$(MKDIR_P) reference/newlib-c
	@: > reference/newlib-c/$(am__dirstamp)
reference/newlib-c/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/newlib-c/$(DEPDIR)
	@: > reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/memchr.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/memcmp.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/memcpy.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/memset.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/strchr.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/strcmp.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/strcpy.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
reference/newlib-c/strlen.$(OBJEXT):  \
	reference/newlib-c/$(am__dirstamp) \
	reference/newlib-c/$(DEPDIR)/$(am__dirstamp)

libnewlib-c.a: $(libnewlib_c_a_OBJECTS) $(libnewlib_c_a_DEPENDENCIES) $(EXTRA_libnewlib_c_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libnewlib-c.a
	$(AM_V_AR)$(libnewlib_c_a_AR) libnewlib-c.a $(libnewlib_c_a_OBJECTS) $(libnewlib_c_a_LIBADD)
	$(AM_V_at)$(RANLIB) libnewlib-c.a
reference/newlib-xscale/$(am__dirstamp):
	@$(MKDIR_P) reference/newlib-xscale
	@: > reference/newlib-xscale/$(am__dirstamp)
reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/newlib-xscale/$(DEPDIR)
	@: > reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/memchr.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/memcpy.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/memset.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/strchr.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/strcmp.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/strcpy.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
reference/newlib-xscale/strlen.$(OBJEXT):  \
	reference/newlib-xscale/$(am__dirstamp) \
	reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)

libnewlib-xscale.a: $(libnewlib_xscale_a_OBJECTS) $(libnewlib_xscale_a_DEPENDENCIES) $(EXTRA_libnewlib_xscale_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libnewlib-xscale.a
	$(AM_V_AR)$(libnewlib_xscale_a_AR) libnewlib-xscale.a $(libnewlib_xscale_a_OBJECTS) $(libnewlib_xscale_a_LIBADD)
	$(AM_V_at)$(RANLIB) libnewlib-xscale.a
reference/newlib/$(am__dirstamp):
	@$(MKDIR_P) reference/newlib
	@: > reference/newlib/$(am__dirstamp)
reference/newlib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/newlib/$(DEPDIR)
	@: > reference/newlib/$(DEPDIR)/$(am__dirstamp)
reference/newlib/memcpy.$(OBJEXT): reference/newlib/$(am__dirstamp) \
	reference/newlib/$(DEPDIR)/$(am__dirstamp)
reference/newlib/strcmp.$(OBJEXT): reference/newlib/$(am__dirstamp) \
	reference/newlib/$(DEPDIR)/$(am__dirstamp)
reference/newlib/strcpy.$(OBJEXT): reference/newlib/$(am__dirstamp) \
	reference/newlib/$(DEPDIR)/$(am__dirstamp)
reference/newlib/strlen.$(OBJEXT): reference/newlib/$(am__dirstamp) \
	reference/newlib/$(DEPDIR)/$(am__dirstamp)

libnewlib.a: $(libnewlib_a_OBJECTS) $(libnewlib_a_DEPENDENCIES) $(EXTRA_libnewlib_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libnewlib.a
	$(AM_V_AR)$(libnewlib_a_AR) libnewlib.a $(libnewlib_a_OBJECTS) $(libnewlib_a_LIBADD)
	$(AM_V_at)$(RANLIB) libnewlib.a
reference/plain/$(am__dirstamp):
	@$(MKDIR_P) reference/plain
	@: > reference/plain/$(am__dirstamp)
reference/plain/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) reference/plain/$(DEPDIR)
	@: > reference/plain/$(DEPDIR)/$(am__dirstamp)
reference/plain/memset.$(OBJEXT): reference/plain/$(am__dirstamp) \
	reference/plain/$(DEPDIR)/$(am__dirstamp)
reference/plain/memcpy.$(OBJEXT): reference/plain/$(am__dirstamp) \
	reference/plain/$(DEPDIR)/$(am__dirstamp)
reference/plain/strcmp.$(OBJEXT): reference/plain/$(am__dirstamp) \
	reference/plain/$(DEPDIR)/$(am__dirstamp)
reference/plain/strcpy.$(OBJEXT): reference/plain/$(am__dirstamp) \
	reference/plain/$(DEPDIR)/$(am__dirstamp)

libplain.a: $(libplain_a_OBJECTS) $(libplain_a_DEPENDENCIES) $(EXTRA_libplain_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libplain.a
	$(AM_V_AR)$(libplain_a_AR) libplain.a $(libplain_a_OBJECTS) $(libplain_a_LIBADD)
	$(AM_V_at)$(RANLIB) libplain.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/thumb-2/$(am__dirstamp):
	@$(MKDIR_P) src/thumb-2
	@: > src/thumb-2/$(am__dirstamp)
src/thumb-2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/thumb-2/$(DEPDIR)
	@: > src/thumb-2/$(DEPDIR)/$(am__dirstamp)
src/thumb-2/strcpy.lo: src/thumb-2/$(am__dirstamp) \
	src/thumb-2/$(DEPDIR)/$(am__dirstamp)
src/arm/$(am__dirstamp):
	@$(MKDIR_P) src/arm
	@: > src/arm/$(am__dirstamp)
src/arm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/arm/$(DEPDIR)
	@: > src/arm/$(DEPDIR)/$(am__dirstamp)
src/arm/memchr.lo: src/arm/$(am__dirstamp) \
	src/arm/$(DEPDIR)/$(am__dirstamp)
src/arm/strchr.lo: src/arm/$(am__dirstamp) \
	src/arm/$(DEPDIR)/$(am__dirstamp)
src/thumb-2/strlen.lo: src/thumb-2/$(am__dirstamp) \
	src/thumb-2/$(DEPDIR)/$(am__dirstamp)
src/arm/memset.lo: src/arm/$(am__dirstamp) \
	src/arm/$(DEPDIR)/$(am__dirstamp)
src/arm/memcpy.lo: src/arm/$(am__dirstamp) \
	src/arm/$(DEPDIR)/$(am__dirstamp)
src/arm/strcmp.lo: src/arm/$(am__dirstamp) \
	src/arm/$(DEPDIR)/$(am__dirstamp)
src/aarch64/$(am__dirstamp):
	@$(MKDIR_P) src/aarch64
	@: > src/aarch64/$(am__dirstamp)
src/aarch64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/aarch64/$(DEPDIR)
	@: > src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/memchr.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/memcmp.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/memcpy.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/memmove.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/memset.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strchr.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strchrnul.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strcmp.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strcpy.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strlen.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strncmp.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)
src/aarch64/strnlen.lo: src/aarch64/$(am__dirstamp) \
	src/aarch64/$(DEPDIR)/$(am__dirstamp)

libcortex-strings.la: $(libcortex_strings_la_OBJECTS) $(libcortex_strings_la_DEPENDENCIES) $(EXTRA_libcortex_strings_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libcortex_strings_la_LINK) -rpath $(libdir) $(libcortex_strings_la_OBJECTS) $(libcortex_strings_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
benchmarks/dhry/$(am__dirstamp):
	@$(MKDIR_P) benchmarks/dhry
	@: > benchmarks/dhry/$(am__dirstamp)
benchmarks/dhry/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) benchmarks/dhry/$(DEPDIR)
	@: > benchmarks/dhry/$(DEPDIR)/$(am__dirstamp)
benchmarks/dhry/dhry-dhry_1.$(OBJEXT):  \
	benchmarks/dhry/$(am__dirstamp) \
	benchmarks/dhry/$(DEPDIR)/$(am__dirstamp)
benchmarks/dhry/dhry-dhry_2.$(OBJEXT):  \
	benchmarks/dhry/$(am__dirstamp) \
	benchmarks/dhry/$(DEPDIR)/$(am__dirstamp)

dhry$(EXEEXT): $(dhry_OBJECTS) $(dhry_DEPENDENCIES) $(EXTRA_dhry_DEPENDENCIES) 
	@rm -f dhry$(EXEEXT)
	$(AM_V_CCLD)$(dhry_LINK) $(dhry_OBJECTS) $(dhry_LDADD) $(LIBS)
benchmarks/dhry/dhry_native-dhry_1.$(OBJEXT):  \
	benchmarks/dhry/$(am__dirstamp) \
	benchmarks/dhry/$(DEPDIR)/$(am__dirstamp)
benchmarks/dhry/dhry_native-dhry_2.$(OBJEXT):  \
	benchmarks/dhry/$(am__dirstamp) \
	benchmarks/dhry/$(DEPDIR)/$(am__dirstamp)

dhry-native$(EXEEXT): $(dhry_native_OBJECTS) $(dhry_native_DEPENDENCIES) $(EXTRA_dhry_native_DEPENDENCIES) 
	@rm -f dhry-native$(EXEEXT)
	$(AM_V_CCLD)$(dhry_native_LINK) $(dhry_native_OBJECTS) $(dhry_native_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/tests_test_memchr-test-memchr.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-memchr$(EXEEXT): $(tests_test_memchr_OBJECTS) $(tests_test_memchr_DEPENDENCIES) $(EXTRA_tests_test_memchr_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-memchr$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_memchr_LINK) $(tests_test_memchr_OBJECTS) $(tests_test_memchr_LDADD) $(LIBS)
tests/tests_test_memcmp-test-memcmp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-memcmp$(EXEEXT): $(tests_test_memcmp_OBJECTS) $(tests_test_memcmp_DEPENDENCIES) $(EXTRA_tests_test_memcmp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-memcmp$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_memcmp_LINK) $(tests_test_memcmp_OBJECTS) $(tests_test_memcmp_LDADD) $(LIBS)
tests/tests_test_memcpy-test-memcpy.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-memcpy$(EXEEXT): $(tests_test_memcpy_OBJECTS) $(tests_test_memcpy_DEPENDENCIES) $(EXTRA_tests_test_memcpy_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-memcpy$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_memcpy_LINK) $(tests_test_memcpy_OBJECTS) $(tests_test_memcpy_LDADD) $(LIBS)
tests/tests_test_memmove-test-memmove.$(OBJEXT):  \
	tests/$(am__dirstamp) tests/$(DEPDIR)/$(am__dirstamp)

tests/test-memmove$(EXEEXT): $(tests_test_memmove_OBJECTS) $(tests_test_memmove_DEPENDENCIES) $(EXTRA_tests_test_memmove_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-memmove$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_memmove_LINK) $(tests_test_memmove_OBJECTS) $(tests_test_memmove_LDADD) $(LIBS)
tests/tests_test_memset-test-memset.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-memset$(EXEEXT): $(tests_test_memset_OBJECTS) $(tests_test_memset_DEPENDENCIES) $(EXTRA_tests_test_memset_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-memset$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_memset_LINK) $(tests_test_memset_OBJECTS) $(tests_test_memset_LDADD) $(LIBS)
tests/tests_test_strchr-test-strchr.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-strchr$(EXEEXT): $(tests_test_strchr_OBJECTS) $(tests_test_strchr_DEPENDENCIES) $(EXTRA_tests_test_strchr_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-strchr$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_strchr_LINK) $(tests_test_strchr_OBJECTS) $(tests_test_strchr_LDADD) $(LIBS)
tests/tests_test_strcmp-test-strcmp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-strcmp$(EXEEXT): $(tests_test_strcmp_OBJECTS) $(tests_test_strcmp_DEPENDENCIES) $(EXTRA_tests_test_strcmp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-strcmp$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_strcmp_LINK) $(tests_test_strcmp_OBJECTS) $(tests_test_strcmp_LDADD) $(LIBS)
tests/tests_test_strcpy-test-strcpy.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-strcpy$(EXEEXT): $(tests_test_strcpy_OBJECTS) $(tests_test_strcpy_DEPENDENCIES) $(EXTRA_tests_test_strcpy_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-strcpy$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_strcpy_LINK) $(tests_test_strcpy_OBJECTS) $(tests_test_strcpy_LDADD) $(LIBS)
tests/tests_test_strlen-test-strlen.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-strlen$(EXEEXT): $(tests_test_strlen_OBJECTS) $(tests_test_strlen_DEPENDENCIES) $(EXTRA_tests_test_strlen_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-strlen$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_strlen_LINK) $(tests_test_strlen_OBJECTS) $(tests_test_strlen_LDADD) $(LIBS)
tests/tests_test_strncmp-test-strncmp.$(OBJEXT):  \
	tests/$(am__dirstamp) tests/$(DEPDIR)/$(am__dirstamp)

tests/test-strncmp$(EXEEXT): $(tests_test_strncmp_OBJECTS) $(tests_test_strncmp_DEPENDENCIES) $(EXTRA_tests_test_strncmp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-strncmp$(EXEEXT)
	$(AM_V_CCLD)$(tests_test_strncmp_LINK) $(tests_test_strncmp_OBJECTS) $(tests_test_strncmp_LDADD) $(LIBS)
tests/test-strnlen.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)

tests/test-strnlen$(EXEEXT): $(tests_test_strnlen_OBJECTS) $(tests_test_strnlen_DEPENDENCIES) $(EXTRA_tests_test_strnlen_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/test-strnlen$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_test_strnlen_OBJECTS) $(tests_test_strnlen_LDADD) $(LIBS)

try-bionic-a15$(EXEEXT): $(try_bionic_a15_OBJECTS) $(try_bionic_a15_DEPENDENCIES) $(EXTRA_try_bionic_a15_DEPENDENCIES) 
	@rm -f try-bionic-a15$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_bionic_a15_OBJECTS) $(try_bionic_a15_LDADD) $(LIBS)

try-bionic-a9$(EXEEXT): $(try_bionic_a9_OBJECTS) $(try_bionic_a9_DEPENDENCIES) $(EXTRA_try_bionic_a9_DEPENDENCIES) 
	@rm -f try-bionic-a9$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_bionic_a9_OBJECTS) $(try_bionic_a9_LDADD) $(LIBS)

try-bionic-c$(EXEEXT): $(try_bionic_c_OBJECTS) $(try_bionic_c_DEPENDENCIES) $(EXTRA_try_bionic_c_DEPENDENCIES) 
	@rm -f try-bionic-c$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_bionic_c_OBJECTS) $(try_bionic_c_LDADD) $(LIBS)

try-bionic-krait$(EXEEXT): $(try_bionic_krait_OBJECTS) $(try_bionic_krait_DEPENDENCIES) $(EXTRA_try_bionic_krait_DEPENDENCIES) 
	@rm -f try-bionic-krait$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_bionic_krait_OBJECTS) $(try_bionic_krait_LDADD) $(LIBS)

try-csl$(EXEEXT): $(try_csl_OBJECTS) $(try_csl_DEPENDENCIES) $(EXTRA_try_csl_DEPENDENCIES) 
	@rm -f try-csl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_csl_OBJECTS) $(try_csl_LDADD) $(LIBS)

try-glibc$(EXEEXT): $(try_glibc_OBJECTS) $(try_glibc_DEPENDENCIES) $(EXTRA_try_glibc_DEPENDENCIES) 
	@rm -f try-glibc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_glibc_OBJECTS) $(try_glibc_LDADD) $(LIBS)

try-glibc-c$(EXEEXT): $(try_glibc_c_OBJECTS) $(try_glibc_c_DEPENDENCIES) $(EXTRA_try_glibc_c_DEPENDENCIES) 
	@rm -f try-glibc-c$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_glibc_c_OBJECTS) $(try_glibc_c_LDADD) $(LIBS)

try-newlib$(EXEEXT): $(try_newlib_OBJECTS) $(try_newlib_DEPENDENCIES) $(EXTRA_try_newlib_DEPENDENCIES) 
	@rm -f try-newlib$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_newlib_OBJECTS) $(try_newlib_LDADD) $(LIBS)

try-newlib-c$(EXEEXT): $(try_newlib_c_OBJECTS) $(try_newlib_c_DEPENDENCIES) $(EXTRA_try_newlib_c_DEPENDENCIES) 
	@rm -f try-newlib-c$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_newlib_c_OBJECTS) $(try_newlib_c_LDADD) $(LIBS)

try-newlib-xscale$(EXEEXT): $(try_newlib_xscale_OBJECTS) $(try_newlib_xscale_DEPENDENCIES) $(EXTRA_try_newlib_xscale_DEPENDENCIES) 
	@rm -f try-newlib-xscale$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_newlib_xscale_OBJECTS) $(try_newlib_xscale_LDADD) $(LIBS)

try-none$(EXEEXT): $(try_none_OBJECTS) $(try_none_DEPENDENCIES) $(EXTRA_try_none_DEPENDENCIES) 
	@rm -f try-none$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_none_OBJECTS) $(try_none_LDADD) $(LIBS)

try-plain$(EXEEXT): $(try_plain_OBJECTS) $(try_plain_DEPENDENCIES) $(EXTRA_try_plain_DEPENDENCIES) 
	@rm -f try-plain$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_plain_OBJECTS) $(try_plain_LDADD) $(LIBS)

try-this$(EXEEXT): $(try_this_OBJECTS) $(try_this_DEPENDENCIES) $(EXTRA_try_this_DEPENDENCIES) 
	@rm -f try-this$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(try_this_OBJECTS) $(try_this_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f benchmarks/dhry/*.$(OBJEXT)
	-rm -f benchmarks/multi/*.$(OBJEXT)
	-rm -f reference/bionic-a15/*.$(OBJEXT)
	-rm -f reference/bionic-a9/*.$(OBJEXT)
	-rm -f reference/bionic-c/*.$(OBJEXT)
	-rm -f reference/bionic-krait/*.$(OBJEXT)
	-rm -f reference/csl/*.$(OBJEXT)
	-rm -f reference/glibc-c/*.$(OBJEXT)
	-rm -f reference/glibc/*.$(OBJEXT)
	-rm -f reference/newlib-c/*.$(OBJEXT)
	-rm -f reference/newlib-xscale/*.$(OBJEXT)
	-rm -f reference/newlib/*.$(OBJEXT)
	-rm -f reference/plain/*.$(OBJEXT)
	-rm -f src/aarch64/*.$(OBJEXT)
	-rm -f src/aarch64/*.lo
	-rm -f src/arm/*.$(OBJEXT)
	-rm -f src/arm/*.lo
	-rm -f src/thumb-2/*.$(OBJEXT)
	-rm -f src/thumb-2/*.lo
	-rm -f tests/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Po
include benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Po
include benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Po
include benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Po
include benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Po
include reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Po
include reference/bionic-a15/$(DEPDIR)/memcmp.Po
include reference/bionic-a15/$(DEPDIR)/memcpy.Po
include reference/bionic-a15/$(DEPDIR)/memset.Po
include reference/bionic-a15/$(DEPDIR)/strcmp.Po
include reference/bionic-a15/$(DEPDIR)/strcpy.Po
include reference/bionic-a15/$(DEPDIR)/strlen.Po
include reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Po
include reference/bionic-a9/$(DEPDIR)/memcmp.Po
include reference/bionic-a9/$(DEPDIR)/memcpy.Po
include reference/bionic-a9/$(DEPDIR)/memset.Po
include reference/bionic-a9/$(DEPDIR)/strcmp.Po
include reference/bionic-a9/$(DEPDIR)/strcpy.Po
include reference/bionic-c/$(DEPDIR)/bcopy.Po
include reference/bionic-c/$(DEPDIR)/memchr.Po
include reference/bionic-c/$(DEPDIR)/memcmp.Po
include reference/bionic-c/$(DEPDIR)/memcpy.Po
include reference/bionic-c/$(DEPDIR)/memset.Po
include reference/bionic-c/$(DEPDIR)/strchr.Po
include reference/bionic-c/$(DEPDIR)/strcmp.Po
include reference/bionic-c/$(DEPDIR)/strcpy.Po
include reference/bionic-c/$(DEPDIR)/strlen.Po
include reference/bionic-krait/$(DEPDIR)/memcpy.Po
include reference/bionic-krait/$(DEPDIR)/memcpy_base.Po
include reference/bionic-krait/$(DEPDIR)/memset.Po
include reference/bionic-krait/$(DEPDIR)/strcmp.Po
include reference/csl/$(DEPDIR)/memcpy.Po
include reference/csl/$(DEPDIR)/memset.Po
include reference/glibc-c/$(DEPDIR)/memchr.Po
include reference/glibc-c/$(DEPDIR)/memcmp.Po
include reference/glibc-c/$(DEPDIR)/memcpy.Po
include reference/glibc-c/$(DEPDIR)/memset.Po
include reference/glibc-c/$(DEPDIR)/strchr.Po
include reference/glibc-c/$(DEPDIR)/strcmp.Po
include reference/glibc-c/$(DEPDIR)/strcpy.Po
include reference/glibc-c/$(DEPDIR)/strlen.Po
include reference/glibc-c/$(DEPDIR)/wordcopy.Po
include reference/glibc/$(DEPDIR)/memcpy.Po
include reference/glibc/$(DEPDIR)/memset.Po
include reference/glibc/$(DEPDIR)/strchr.Po
include reference/glibc/$(DEPDIR)/strlen.Po
include reference/newlib-c/$(DEPDIR)/memchr.Po
include reference/newlib-c/$(DEPDIR)/memcmp.Po
include reference/newlib-c/$(DEPDIR)/memcpy.Po
include reference/newlib-c/$(DEPDIR)/memset.Po
include reference/newlib-c/$(DEPDIR)/strchr.Po
include reference/newlib-c/$(DEPDIR)/strcmp.Po
include reference/newlib-c/$(DEPDIR)/strcpy.Po
include reference/newlib-c/$(DEPDIR)/strlen.Po
include reference/newlib-xscale/$(DEPDIR)/memchr.Po
include reference/newlib-xscale/$(DEPDIR)/memcpy.Po
include reference/newlib-xscale/$(DEPDIR)/memset.Po
include reference/newlib-xscale/$(DEPDIR)/strchr.Po
include reference/newlib-xscale/$(DEPDIR)/strcmp.Po
include reference/newlib-xscale/$(DEPDIR)/strcpy.Po
include reference/newlib-xscale/$(DEPDIR)/strlen.Po
include reference/newlib/$(DEPDIR)/memcpy.Po
include reference/newlib/$(DEPDIR)/strcmp.Po
include reference/newlib/$(DEPDIR)/strcpy.Po
include reference/newlib/$(DEPDIR)/strlen.Po
include reference/plain/$(DEPDIR)/memcpy.Po
include reference/plain/$(DEPDIR)/memset.Po
include reference/plain/$(DEPDIR)/strcmp.Po
include reference/plain/$(DEPDIR)/strcpy.Po
include src/aarch64/$(DEPDIR)/memchr.Plo
include src/aarch64/$(DEPDIR)/memcmp.Plo
include src/aarch64/$(DEPDIR)/memcpy.Plo
include src/aarch64/$(DEPDIR)/memmove.Plo
include src/aarch64/$(DEPDIR)/memset.Plo
include src/aarch64/$(DEPDIR)/strchr.Plo
include src/aarch64/$(DEPDIR)/strchrnul.Plo
include src/aarch64/$(DEPDIR)/strcmp.Plo
include src/aarch64/$(DEPDIR)/strcpy.Plo
include src/aarch64/$(DEPDIR)/strlen.Plo
include src/aarch64/$(DEPDIR)/strncmp.Plo
include src/aarch64/$(DEPDIR)/strnlen.Plo
include src/arm/$(DEPDIR)/memchr.Plo
include src/arm/$(DEPDIR)/memcpy.Plo
include src/arm/$(DEPDIR)/memset.Plo
include src/arm/$(DEPDIR)/strchr.Plo
include src/arm/$(DEPDIR)/strcmp.Plo
include src/thumb-2/$(DEPDIR)/strcpy.Plo
include src/thumb-2/$(DEPDIR)/strlen.Plo
include tests/$(DEPDIR)/test-strnlen.Po
include tests/$(DEPDIR)/tests_test_memchr-test-memchr.Po
include tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Po
include tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Po
include tests/$(DEPDIR)/tests_test_memmove-test-memmove.Po
include tests/$(DEPDIR)/tests_test_memset-test-memset.Po
include tests/$(DEPDIR)/tests_test_strchr-test-strchr.Po
include tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Po
include tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Po
include tests/$(DEPDIR)/tests_test_strlen-test-strlen.Po
include tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Po

.S.o:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.S.lo:
	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCPPASCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CPPAS)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) \
#	$(AM_V_CPPAS_no)$(LTCPPASCOMPILE) -c -o $@ $<

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

reference/bionic-a15/libbionic_a15_a-strlen.o: reference/bionic-a15/strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a15_a_CFLAGS) $(CFLAGS) -MT reference/bionic-a15/libbionic_a15_a-strlen.o -MD -MP -MF reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Tpo -c -o reference/bionic-a15/libbionic_a15_a-strlen.o `test -f 'reference/bionic-a15/strlen.c' || echo '$(srcdir)/'`reference/bionic-a15/strlen.c
	$(AM_V_at)$(am__mv) reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Tpo reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Po
#	$(AM_V_CC)source='reference/bionic-a15/strlen.c' object='reference/bionic-a15/libbionic_a15_a-strlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a15_a_CFLAGS) $(CFLAGS) -c -o reference/bionic-a15/libbionic_a15_a-strlen.o `test -f 'reference/bionic-a15/strlen.c' || echo '$(srcdir)/'`reference/bionic-a15/strlen.c

reference/bionic-a15/libbionic_a15_a-strlen.obj: reference/bionic-a15/strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a15_a_CFLAGS) $(CFLAGS) -MT reference/bionic-a15/libbionic_a15_a-strlen.obj -MD -MP -MF reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Tpo -c -o reference/bionic-a15/libbionic_a15_a-strlen.obj `if test -f 'reference/bionic-a15/strlen.c'; then $(CYGPATH_W) 'reference/bionic-a15/strlen.c'; else $(CYGPATH_W) '$(srcdir)/reference/bionic-a15/strlen.c'; fi`
	$(AM_V_at)$(am__mv) reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Tpo reference/bionic-a15/$(DEPDIR)/libbionic_a15_a-strlen.Po
#	$(AM_V_CC)source='reference/bionic-a15/strlen.c' object='reference/bionic-a15/libbionic_a15_a-strlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a15_a_CFLAGS) $(CFLAGS) -c -o reference/bionic-a15/libbionic_a15_a-strlen.obj `if test -f 'reference/bionic-a15/strlen.c'; then $(CYGPATH_W) 'reference/bionic-a15/strlen.c'; else $(CYGPATH_W) '$(srcdir)/reference/bionic-a15/strlen.c'; fi`

reference/bionic-a9/libbionic_a9_a-strlen.o: reference/bionic-a9/strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a9_a_CFLAGS) $(CFLAGS) -MT reference/bionic-a9/libbionic_a9_a-strlen.o -MD -MP -MF reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Tpo -c -o reference/bionic-a9/libbionic_a9_a-strlen.o `test -f 'reference/bionic-a9/strlen.c' || echo '$(srcdir)/'`reference/bionic-a9/strlen.c
	$(AM_V_at)$(am__mv) reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Tpo reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Po
#	$(AM_V_CC)source='reference/bionic-a9/strlen.c' object='reference/bionic-a9/libbionic_a9_a-strlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a9_a_CFLAGS) $(CFLAGS) -c -o reference/bionic-a9/libbionic_a9_a-strlen.o `test -f 'reference/bionic-a9/strlen.c' || echo '$(srcdir)/'`reference/bionic-a9/strlen.c

reference/bionic-a9/libbionic_a9_a-strlen.obj: reference/bionic-a9/strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a9_a_CFLAGS) $(CFLAGS) -MT reference/bionic-a9/libbionic_a9_a-strlen.obj -MD -MP -MF reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Tpo -c -o reference/bionic-a9/libbionic_a9_a-strlen.obj `if test -f 'reference/bionic-a9/strlen.c'; then $(CYGPATH_W) 'reference/bionic-a9/strlen.c'; else $(CYGPATH_W) '$(srcdir)/reference/bionic-a9/strlen.c'; fi`
	$(AM_V_at)$(am__mv) reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Tpo reference/bionic-a9/$(DEPDIR)/libbionic_a9_a-strlen.Po
#	$(AM_V_CC)source='reference/bionic-a9/strlen.c' object='reference/bionic-a9/libbionic_a9_a-strlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbionic_a9_a_CFLAGS) $(CFLAGS) -c -o reference/bionic-a9/libbionic_a9_a-strlen.obj `if test -f 'reference/bionic-a9/strlen.c'; then $(CYGPATH_W) 'reference/bionic-a9/strlen.c'; else $(CYGPATH_W) '$(srcdir)/reference/bionic-a9/strlen.c'; fi`

benchmarks/multi/libmulti_a-harness.o: benchmarks/multi/harness.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmulti_a_CFLAGS) $(CFLAGS) -MT benchmarks/multi/libmulti_a-harness.o -MD -MP -MF benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Tpo -c -o benchmarks/multi/libmulti_a-harness.o `test -f 'benchmarks/multi/harness.c' || echo '$(srcdir)/'`benchmarks/multi/harness.c
	$(AM_V_at)$(am__mv) benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Tpo benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Po
#	$(AM_V_CC)source='benchmarks/multi/harness.c' object='benchmarks/multi/libmulti_a-harness.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmulti_a_CFLAGS) $(CFLAGS) -c -o benchmarks/multi/libmulti_a-harness.o `test -f 'benchmarks/multi/harness.c' || echo '$(srcdir)/'`benchmarks/multi/harness.c

benchmarks/multi/libmulti_a-harness.obj: benchmarks/multi/harness.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmulti_a_CFLAGS) $(CFLAGS) -MT benchmarks/multi/libmulti_a-harness.obj -MD -MP -MF benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Tpo -c -o benchmarks/multi/libmulti_a-harness.obj `if test -f 'benchmarks/multi/harness.c'; then $(CYGPATH_W) 'benchmarks/multi/harness.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/multi/harness.c'; fi`
	$(AM_V_at)$(am__mv) benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Tpo benchmarks/multi/$(DEPDIR)/libmulti_a-harness.Po
#	$(AM_V_CC)source='benchmarks/multi/harness.c' object='benchmarks/multi/libmulti_a-harness.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmulti_a_CFLAGS) $(CFLAGS) -c -o benchmarks/multi/libmulti_a-harness.obj `if test -f 'benchmarks/multi/harness.c'; then $(CYGPATH_W) 'benchmarks/multi/harness.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/multi/harness.c'; fi`

benchmarks/dhry/dhry-dhry_1.o: benchmarks/dhry/dhry_1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry-dhry_1.o -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Tpo -c -o benchmarks/dhry/dhry-dhry_1.o `test -f 'benchmarks/dhry/dhry_1.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_1.c
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Tpo benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_1.c' object='benchmarks/dhry/dhry-dhry_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry-dhry_1.o `test -f 'benchmarks/dhry/dhry_1.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_1.c

benchmarks/dhry/dhry-dhry_1.obj: benchmarks/dhry/dhry_1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry-dhry_1.obj -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Tpo -c -o benchmarks/dhry/dhry-dhry_1.obj `if test -f 'benchmarks/dhry/dhry_1.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_1.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_1.c'; fi`
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Tpo benchmarks/dhry/$(DEPDIR)/dhry-dhry_1.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_1.c' object='benchmarks/dhry/dhry-dhry_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry-dhry_1.obj `if test -f 'benchmarks/dhry/dhry_1.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_1.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_1.c'; fi`

benchmarks/dhry/dhry-dhry_2.o: benchmarks/dhry/dhry_2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry-dhry_2.o -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Tpo -c -o benchmarks/dhry/dhry-dhry_2.o `test -f 'benchmarks/dhry/dhry_2.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_2.c
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Tpo benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_2.c' object='benchmarks/dhry/dhry-dhry_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry-dhry_2.o `test -f 'benchmarks/dhry/dhry_2.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_2.c

benchmarks/dhry/dhry-dhry_2.obj: benchmarks/dhry/dhry_2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry-dhry_2.obj -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Tpo -c -o benchmarks/dhry/dhry-dhry_2.obj `if test -f 'benchmarks/dhry/dhry_2.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_2.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_2.c'; fi`
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Tpo benchmarks/dhry/$(DEPDIR)/dhry-dhry_2.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_2.c' object='benchmarks/dhry/dhry-dhry_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry-dhry_2.obj `if test -f 'benchmarks/dhry/dhry_2.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_2.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_2.c'; fi`

benchmarks/dhry/dhry_native-dhry_1.o: benchmarks/dhry/dhry_1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry_native-dhry_1.o -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Tpo -c -o benchmarks/dhry/dhry_native-dhry_1.o `test -f 'benchmarks/dhry/dhry_1.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_1.c
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Tpo benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_1.c' object='benchmarks/dhry/dhry_native-dhry_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry_native-dhry_1.o `test -f 'benchmarks/dhry/dhry_1.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_1.c

benchmarks/dhry/dhry_native-dhry_1.obj: benchmarks/dhry/dhry_1.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry_native-dhry_1.obj -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Tpo -c -o benchmarks/dhry/dhry_native-dhry_1.obj `if test -f 'benchmarks/dhry/dhry_1.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_1.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_1.c'; fi`
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Tpo benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_1.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_1.c' object='benchmarks/dhry/dhry_native-dhry_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry_native-dhry_1.obj `if test -f 'benchmarks/dhry/dhry_1.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_1.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_1.c'; fi`

benchmarks/dhry/dhry_native-dhry_2.o: benchmarks/dhry/dhry_2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry_native-dhry_2.o -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Tpo -c -o benchmarks/dhry/dhry_native-dhry_2.o `test -f 'benchmarks/dhry/dhry_2.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_2.c
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Tpo benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_2.c' object='benchmarks/dhry/dhry_native-dhry_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry_native-dhry_2.o `test -f 'benchmarks/dhry/dhry_2.c' || echo '$(srcdir)/'`benchmarks/dhry/dhry_2.c

benchmarks/dhry/dhry_native-dhry_2.obj: benchmarks/dhry/dhry_2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -MT benchmarks/dhry/dhry_native-dhry_2.obj -MD -MP -MF benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Tpo -c -o benchmarks/dhry/dhry_native-dhry_2.obj `if test -f 'benchmarks/dhry/dhry_2.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_2.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_2.c'; fi`
	$(AM_V_at)$(am__mv) benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Tpo benchmarks/dhry/$(DEPDIR)/dhry_native-dhry_2.Po
#	$(AM_V_CC)source='benchmarks/dhry/dhry_2.c' object='benchmarks/dhry/dhry_native-dhry_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dhry_native_CFLAGS) $(CFLAGS) -c -o benchmarks/dhry/dhry_native-dhry_2.obj `if test -f 'benchmarks/dhry/dhry_2.c'; then $(CYGPATH_W) 'benchmarks/dhry/dhry_2.c'; else $(CYGPATH_W) '$(srcdir)/benchmarks/dhry/dhry_2.c'; fi`

tests/tests_test_memchr-test-memchr.o: tests/test-memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memchr_CFLAGS) $(CFLAGS) -MT tests/tests_test_memchr-test-memchr.o -MD -MP -MF tests/$(DEPDIR)/tests_test_memchr-test-memchr.Tpo -c -o tests/tests_test_memchr-test-memchr.o `test -f 'tests/test-memchr.c' || echo '$(srcdir)/'`tests/test-memchr.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memchr-test-memchr.Tpo tests/$(DEPDIR)/tests_test_memchr-test-memchr.Po
#	$(AM_V_CC)source='tests/test-memchr.c' object='tests/tests_test_memchr-test-memchr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memchr_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memchr-test-memchr.o `test -f 'tests/test-memchr.c' || echo '$(srcdir)/'`tests/test-memchr.c

tests/tests_test_memchr-test-memchr.obj: tests/test-memchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memchr_CFLAGS) $(CFLAGS) -MT tests/tests_test_memchr-test-memchr.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_memchr-test-memchr.Tpo -c -o tests/tests_test_memchr-test-memchr.obj `if test -f 'tests/test-memchr.c'; then $(CYGPATH_W) 'tests/test-memchr.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memchr.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memchr-test-memchr.Tpo tests/$(DEPDIR)/tests_test_memchr-test-memchr.Po
#	$(AM_V_CC)source='tests/test-memchr.c' object='tests/tests_test_memchr-test-memchr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memchr_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memchr-test-memchr.obj `if test -f 'tests/test-memchr.c'; then $(CYGPATH_W) 'tests/test-memchr.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memchr.c'; fi`

tests/tests_test_memcmp-test-memcmp.o: tests/test-memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcmp_CFLAGS) $(CFLAGS) -MT tests/tests_test_memcmp-test-memcmp.o -MD -MP -MF tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Tpo -c -o tests/tests_test_memcmp-test-memcmp.o `test -f 'tests/test-memcmp.c' || echo '$(srcdir)/'`tests/test-memcmp.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Tpo tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Po
#	$(AM_V_CC)source='tests/test-memcmp.c' object='tests/tests_test_memcmp-test-memcmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcmp_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memcmp-test-memcmp.o `test -f 'tests/test-memcmp.c' || echo '$(srcdir)/'`tests/test-memcmp.c

tests/tests_test_memcmp-test-memcmp.obj: tests/test-memcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcmp_CFLAGS) $(CFLAGS) -MT tests/tests_test_memcmp-test-memcmp.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Tpo -c -o tests/tests_test_memcmp-test-memcmp.obj `if test -f 'tests/test-memcmp.c'; then $(CYGPATH_W) 'tests/test-memcmp.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memcmp.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Tpo tests/$(DEPDIR)/tests_test_memcmp-test-memcmp.Po
#	$(AM_V_CC)source='tests/test-memcmp.c' object='tests/tests_test_memcmp-test-memcmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcmp_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memcmp-test-memcmp.obj `if test -f 'tests/test-memcmp.c'; then $(CYGPATH_W) 'tests/test-memcmp.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memcmp.c'; fi`

tests/tests_test_memcpy-test-memcpy.o: tests/test-memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcpy_CFLAGS) $(CFLAGS) -MT tests/tests_test_memcpy-test-memcpy.o -MD -MP -MF tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Tpo -c -o tests/tests_test_memcpy-test-memcpy.o `test -f 'tests/test-memcpy.c' || echo '$(srcdir)/'`tests/test-memcpy.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Tpo tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Po
#	$(AM_V_CC)source='tests/test-memcpy.c' object='tests/tests_test_memcpy-test-memcpy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcpy_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memcpy-test-memcpy.o `test -f 'tests/test-memcpy.c' || echo '$(srcdir)/'`tests/test-memcpy.c

tests/tests_test_memcpy-test-memcpy.obj: tests/test-memcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcpy_CFLAGS) $(CFLAGS) -MT tests/tests_test_memcpy-test-memcpy.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Tpo -c -o tests/tests_test_memcpy-test-memcpy.obj `if test -f 'tests/test-memcpy.c'; then $(CYGPATH_W) 'tests/test-memcpy.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memcpy.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Tpo tests/$(DEPDIR)/tests_test_memcpy-test-memcpy.Po
#	$(AM_V_CC)source='tests/test-memcpy.c' object='tests/tests_test_memcpy-test-memcpy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memcpy_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memcpy-test-memcpy.obj `if test -f 'tests/test-memcpy.c'; then $(CYGPATH_W) 'tests/test-memcpy.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memcpy.c'; fi`

tests/tests_test_memmove-test-memmove.o: tests/test-memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memmove_CFLAGS) $(CFLAGS) -MT tests/tests_test_memmove-test-memmove.o -MD -MP -MF tests/$(DEPDIR)/tests_test_memmove-test-memmove.Tpo -c -o tests/tests_test_memmove-test-memmove.o `test -f 'tests/test-memmove.c' || echo '$(srcdir)/'`tests/test-memmove.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memmove-test-memmove.Tpo tests/$(DEPDIR)/tests_test_memmove-test-memmove.Po
#	$(AM_V_CC)source='tests/test-memmove.c' object='tests/tests_test_memmove-test-memmove.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memmove_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memmove-test-memmove.o `test -f 'tests/test-memmove.c' || echo '$(srcdir)/'`tests/test-memmove.c

tests/tests_test_memmove-test-memmove.obj: tests/test-memmove.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memmove_CFLAGS) $(CFLAGS) -MT tests/tests_test_memmove-test-memmove.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_memmove-test-memmove.Tpo -c -o tests/tests_test_memmove-test-memmove.obj `if test -f 'tests/test-memmove.c'; then $(CYGPATH_W) 'tests/test-memmove.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memmove.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memmove-test-memmove.Tpo tests/$(DEPDIR)/tests_test_memmove-test-memmove.Po
#	$(AM_V_CC)source='tests/test-memmove.c' object='tests/tests_test_memmove-test-memmove.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memmove_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memmove-test-memmove.obj `if test -f 'tests/test-memmove.c'; then $(CYGPATH_W) 'tests/test-memmove.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memmove.c'; fi`

tests/tests_test_memset-test-memset.o: tests/test-memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memset_CFLAGS) $(CFLAGS) -MT tests/tests_test_memset-test-memset.o -MD -MP -MF tests/$(DEPDIR)/tests_test_memset-test-memset.Tpo -c -o tests/tests_test_memset-test-memset.o `test -f 'tests/test-memset.c' || echo '$(srcdir)/'`tests/test-memset.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memset-test-memset.Tpo tests/$(DEPDIR)/tests_test_memset-test-memset.Po
#	$(AM_V_CC)source='tests/test-memset.c' object='tests/tests_test_memset-test-memset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memset_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memset-test-memset.o `test -f 'tests/test-memset.c' || echo '$(srcdir)/'`tests/test-memset.c

tests/tests_test_memset-test-memset.obj: tests/test-memset.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memset_CFLAGS) $(CFLAGS) -MT tests/tests_test_memset-test-memset.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_memset-test-memset.Tpo -c -o tests/tests_test_memset-test-memset.obj `if test -f 'tests/test-memset.c'; then $(CYGPATH_W) 'tests/test-memset.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memset.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_memset-test-memset.Tpo tests/$(DEPDIR)/tests_test_memset-test-memset.Po
#	$(AM_V_CC)source='tests/test-memset.c' object='tests/tests_test_memset-test-memset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_memset_CFLAGS) $(CFLAGS) -c -o tests/tests_test_memset-test-memset.obj `if test -f 'tests/test-memset.c'; then $(CYGPATH_W) 'tests/test-memset.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-memset.c'; fi`

tests/tests_test_strchr-test-strchr.o: tests/test-strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strchr_CFLAGS) $(CFLAGS) -MT tests/tests_test_strchr-test-strchr.o -MD -MP -MF tests/$(DEPDIR)/tests_test_strchr-test-strchr.Tpo -c -o tests/tests_test_strchr-test-strchr.o `test -f 'tests/test-strchr.c' || echo '$(srcdir)/'`tests/test-strchr.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strchr-test-strchr.Tpo tests/$(DEPDIR)/tests_test_strchr-test-strchr.Po
#	$(AM_V_CC)source='tests/test-strchr.c' object='tests/tests_test_strchr-test-strchr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strchr_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strchr-test-strchr.o `test -f 'tests/test-strchr.c' || echo '$(srcdir)/'`tests/test-strchr.c

tests/tests_test_strchr-test-strchr.obj: tests/test-strchr.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strchr_CFLAGS) $(CFLAGS) -MT tests/tests_test_strchr-test-strchr.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_strchr-test-strchr.Tpo -c -o tests/tests_test_strchr-test-strchr.obj `if test -f 'tests/test-strchr.c'; then $(CYGPATH_W) 'tests/test-strchr.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strchr.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strchr-test-strchr.Tpo tests/$(DEPDIR)/tests_test_strchr-test-strchr.Po
#	$(AM_V_CC)source='tests/test-strchr.c' object='tests/tests_test_strchr-test-strchr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strchr_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strchr-test-strchr.obj `if test -f 'tests/test-strchr.c'; then $(CYGPATH_W) 'tests/test-strchr.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strchr.c'; fi`

tests/tests_test_strcmp-test-strcmp.o: tests/test-strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcmp_CFLAGS) $(CFLAGS) -MT tests/tests_test_strcmp-test-strcmp.o -MD -MP -MF tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Tpo -c -o tests/tests_test_strcmp-test-strcmp.o `test -f 'tests/test-strcmp.c' || echo '$(srcdir)/'`tests/test-strcmp.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Tpo tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Po
#	$(AM_V_CC)source='tests/test-strcmp.c' object='tests/tests_test_strcmp-test-strcmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcmp_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strcmp-test-strcmp.o `test -f 'tests/test-strcmp.c' || echo '$(srcdir)/'`tests/test-strcmp.c

tests/tests_test_strcmp-test-strcmp.obj: tests/test-strcmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcmp_CFLAGS) $(CFLAGS) -MT tests/tests_test_strcmp-test-strcmp.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Tpo -c -o tests/tests_test_strcmp-test-strcmp.obj `if test -f 'tests/test-strcmp.c'; then $(CYGPATH_W) 'tests/test-strcmp.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strcmp.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Tpo tests/$(DEPDIR)/tests_test_strcmp-test-strcmp.Po
#	$(AM_V_CC)source='tests/test-strcmp.c' object='tests/tests_test_strcmp-test-strcmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcmp_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strcmp-test-strcmp.obj `if test -f 'tests/test-strcmp.c'; then $(CYGPATH_W) 'tests/test-strcmp.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strcmp.c'; fi`

tests/tests_test_strcpy-test-strcpy.o: tests/test-strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcpy_CFLAGS) $(CFLAGS) -MT tests/tests_test_strcpy-test-strcpy.o -MD -MP -MF tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Tpo -c -o tests/tests_test_strcpy-test-strcpy.o `test -f 'tests/test-strcpy.c' || echo '$(srcdir)/'`tests/test-strcpy.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Tpo tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Po
#	$(AM_V_CC)source='tests/test-strcpy.c' object='tests/tests_test_strcpy-test-strcpy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcpy_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strcpy-test-strcpy.o `test -f 'tests/test-strcpy.c' || echo '$(srcdir)/'`tests/test-strcpy.c

tests/tests_test_strcpy-test-strcpy.obj: tests/test-strcpy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcpy_CFLAGS) $(CFLAGS) -MT tests/tests_test_strcpy-test-strcpy.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Tpo -c -o tests/tests_test_strcpy-test-strcpy.obj `if test -f 'tests/test-strcpy.c'; then $(CYGPATH_W) 'tests/test-strcpy.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strcpy.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Tpo tests/$(DEPDIR)/tests_test_strcpy-test-strcpy.Po
#	$(AM_V_CC)source='tests/test-strcpy.c' object='tests/tests_test_strcpy-test-strcpy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strcpy_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strcpy-test-strcpy.obj `if test -f 'tests/test-strcpy.c'; then $(CYGPATH_W) 'tests/test-strcpy.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strcpy.c'; fi`

tests/tests_test_strlen-test-strlen.o: tests/test-strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strlen_CFLAGS) $(CFLAGS) -MT tests/tests_test_strlen-test-strlen.o -MD -MP -MF tests/$(DEPDIR)/tests_test_strlen-test-strlen.Tpo -c -o tests/tests_test_strlen-test-strlen.o `test -f 'tests/test-strlen.c' || echo '$(srcdir)/'`tests/test-strlen.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strlen-test-strlen.Tpo tests/$(DEPDIR)/tests_test_strlen-test-strlen.Po
#	$(AM_V_CC)source='tests/test-strlen.c' object='tests/tests_test_strlen-test-strlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strlen_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strlen-test-strlen.o `test -f 'tests/test-strlen.c' || echo '$(srcdir)/'`tests/test-strlen.c

tests/tests_test_strlen-test-strlen.obj: tests/test-strlen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strlen_CFLAGS) $(CFLAGS) -MT tests/tests_test_strlen-test-strlen.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_strlen-test-strlen.Tpo -c -o tests/tests_test_strlen-test-strlen.obj `if test -f 'tests/test-strlen.c'; then $(CYGPATH_W) 'tests/test-strlen.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strlen.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strlen-test-strlen.Tpo tests/$(DEPDIR)/tests_test_strlen-test-strlen.Po
#	$(AM_V_CC)source='tests/test-strlen.c' object='tests/tests_test_strlen-test-strlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strlen_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strlen-test-strlen.obj `if test -f 'tests/test-strlen.c'; then $(CYGPATH_W) 'tests/test-strlen.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strlen.c'; fi`

tests/tests_test_strncmp-test-strncmp.o: tests/test-strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strncmp_CFLAGS) $(CFLAGS) -MT tests/tests_test_strncmp-test-strncmp.o -MD -MP -MF tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Tpo -c -o tests/tests_test_strncmp-test-strncmp.o `test -f 'tests/test-strncmp.c' || echo '$(srcdir)/'`tests/test-strncmp.c
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Tpo tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Po
#	$(AM_V_CC)source='tests/test-strncmp.c' object='tests/tests_test_strncmp-test-strncmp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strncmp_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strncmp-test-strncmp.o `test -f 'tests/test-strncmp.c' || echo '$(srcdir)/'`tests/test-strncmp.c

tests/tests_test_strncmp-test-strncmp.obj: tests/test-strncmp.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strncmp_CFLAGS) $(CFLAGS) -MT tests/tests_test_strncmp-test-strncmp.obj -MD -MP -MF tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Tpo -c -o tests/tests_test_strncmp-test-strncmp.obj `if test -f 'tests/test-strncmp.c'; then $(CYGPATH_W) 'tests/test-strncmp.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strncmp.c'; fi`
	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Tpo tests/$(DEPDIR)/tests_test_strncmp-test-strncmp.Po
#	$(AM_V_CC)source='tests/test-strncmp.c' object='tests/tests_test_strncmp-test-strncmp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tests_test_strncmp_CFLAGS) $(CFLAGS) -c -o tests/tests_test_strncmp-test-strncmp.obj `if test -f 'tests/test-strncmp.c'; then $(CYGPATH_W) 'tests/test-strncmp.c'; else $(CYGPATH_W) '$(srcdir)/tests/test-strncmp.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/aarch64/.libs src/aarch64/_libs
	-rm -rf src/arm/.libs src/arm/_libs
	-rm -rf src/thumb-2/.libs src/thumb-2/_libs
	-rm -rf tests/.libs tests/_libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tests/test-memchr.log: tests/test-memchr$(EXEEXT)
	@p='tests/test-memchr$(EXEEXT)'; \
	b='tests/test-memchr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-memcmp.log: tests/test-memcmp$(EXEEXT)
	@p='tests/test-memcmp$(EXEEXT)'; \
	b='tests/test-memcmp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-memcpy.log: tests/test-memcpy$(EXEEXT)
	@p='tests/test-memcpy$(EXEEXT)'; \
	b='tests/test-memcpy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-memmove.log: tests/test-memmove$(EXEEXT)
	@p='tests/test-memmove$(EXEEXT)'; \
	b='tests/test-memmove'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-memset.log: tests/test-memset$(EXEEXT)
	@p='tests/test-memset$(EXEEXT)'; \
	b='tests/test-memset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-strchr.log: tests/test-strchr$(EXEEXT)
	@p='tests/test-strchr$(EXEEXT)'; \
	b='tests/test-strchr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-strcmp.log: tests/test-strcmp$(EXEEXT)
	@p='tests/test-strcmp$(EXEEXT)'; \
	b='tests/test-strcmp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-strcpy.log: tests/test-strcpy$(EXEEXT)
	@p='tests/test-strcpy$(EXEEXT)'; \
	b='tests/test-strcpy'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-strlen.log: tests/test-strlen$(EXEEXT)
	@p='tests/test-strlen$(EXEEXT)'; \
	b='tests/test-strlen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-strncmp.log: tests/test-strncmp$(EXEEXT)
	@p='tests/test-strncmp$(EXEEXT)'; \
	b='tests/test-strncmp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tests/test-strnlen.log: tests/test-strnlen$(EXEEXT)
	@p='tests/test-strnlen$(EXEEXT)'; \
	b='tests/test-strnlen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f benchmarks/dhry/$(DEPDIR)/$(am__dirstamp)
	-rm -f benchmarks/dhry/$(am__dirstamp)
	-rm -f benchmarks/multi/$(DEPDIR)/$(am__dirstamp)
	-rm -f benchmarks/multi/$(am__dirstamp)
	-rm -f reference/bionic-a15/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/bionic-a15/$(am__dirstamp)
	-rm -f reference/bionic-a9/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/bionic-a9/$(am__dirstamp)
	-rm -f reference/bionic-c/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/bionic-c/$(am__dirstamp)
	-rm -f reference/bionic-krait/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/bionic-krait/$(am__dirstamp)
	-rm -f reference/csl/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/csl/$(am__dirstamp)
	-rm -f reference/glibc-c/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/glibc-c/$(am__dirstamp)
	-rm -f reference/glibc/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/glibc/$(am__dirstamp)
	-rm -f reference/newlib-c/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/newlib-c/$(am__dirstamp)
	-rm -f reference/newlib-xscale/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/newlib-xscale/$(am__dirstamp)
	-rm -f reference/newlib/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/newlib/$(am__dirstamp)
	-rm -f reference/plain/$(DEPDIR)/$(am__dirstamp)
	-rm -f reference/plain/$(am__dirstamp)
	-rm -f src/aarch64/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/aarch64/$(am__dirstamp)
	-rm -f src/arm/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/arm/$(am__dirstamp)
	-rm -f src/thumb-2/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/thumb-2/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf benchmarks/dhry/$(DEPDIR) benchmarks/multi/$(DEPDIR) reference/bionic-a15/$(DEPDIR) reference/bionic-a9/$(DEPDIR) reference/bionic-c/$(DEPDIR) reference/bionic-krait/$(DEPDIR) reference/csl/$(DEPDIR) reference/glibc-c/$(DEPDIR) reference/glibc/$(DEPDIR) reference/newlib-c/$(DEPDIR) reference/newlib-xscale/$(DEPDIR) reference/newlib/$(DEPDIR) reference/plain/$(DEPDIR) src/aarch64/$(DEPDIR) src/arm/$(DEPDIR) src/thumb-2/$(DEPDIR) tests/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf benchmarks/dhry/$(DEPDIR) benchmarks/multi/$(DEPDIR) reference/bionic-a15/$(DEPDIR) reference/bionic-a9/$(DEPDIR) reference/bionic-c/$(DEPDIR) reference/bionic-krait/$(DEPDIR) reference/csl/$(DEPDIR) reference/glibc-c/$(DEPDIR) reference/glibc/$(DEPDIR) reference/newlib-c/$(DEPDIR) reference/newlib-xscale/$(DEPDIR) reference/newlib/$(DEPDIR) reference/plain/$(DEPDIR) src/aarch64/$(DEPDIR) src/arm/$(DEPDIR) src/thumb-2/$(DEPDIR) tests/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-checkPROGRAMS clean-cscope clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLIBRARIES \
	clean-noinstPROGRAMS cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
